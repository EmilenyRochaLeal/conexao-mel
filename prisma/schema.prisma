generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int         @id @default(autoincrement())
  name      String      @db.VarChar(100)
  email     String      @unique @db.VarChar(100)
  password  String      @db.VarChar(255)
  role      UserType
  produtos  Produto[]   @relation("VendedorProduto")
  pedidos   Pedido[]    @relation("CompradorPedido")
  avaliacao Avaliacao[]
  createdAt DateTime    @default(now())

  @@index([role])
  @@index([createdAt])
}

model Produto {
  id         Int         @id @default(autoincrement())
  name       String      @db.VarChar(100)
  preco      Decimal     @db.Decimal(10, 2) // 10 dígitos no total, 2 casas decimais
  estoque    Decimal     @db.Decimal(10, 2) 
  descricao  String      @db.VarChar(500)
  imagemName String?
  role       Roledemel
  vendedor   User        @relation("VendedorProduto", fields: [vendedorId], references: [id])
  vendedorId Int
  pedidos    Pedido[]
  avaliacoes Avaliacao[]

  @@index([preco])
  @@index([role])

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Pedido {
  id          Int          @id @default(autoincrement())
  comprador   User         @relation("CompradorPedido", fields: [compradorId], references: [id])
  compradorId Int
  estado      PedidoEstado
  produto     Produto      @relation(fields: [produtoId], references: [id])
  produtoId   Int
  totalPrice Decimal   @db.Decimal(10, 2)
  quantidade Decimal   @db.Decimal(10, 2)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

}

model Avaliacao {
  id          Int     @id @default(autoincrement())
  produto     Produto @relation(fields: [produtoId], references: [id])
  produtoId   Int
  comprador   User    @relation(fields: [compradorId], references: [id])
  compradorId Int
  avaliacao   Int
  descricao   String
}

enum UserType {
  VENDEDOR
  COMPRADOR
}

enum Roledemel {
  Cajueiro
  Aroeira
  Eucalipto
  Laranjeira
  Jataí
  Marmeleiro
  Silvestre
}

enum PedidoEstado {
  ANDAMENTO
  CANCELADO
  PRONTO
}
